<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">vlokhande</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">Medical20!</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="location" elementType="Argument">
            <stringProp name="Argument.name">location</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login Page Read" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginPageRead" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.18.0.76</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/demo/crm/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">53764</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
              <stringProp name="TestPlan.comments">Recorded:53764ms</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76/demo/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login Page Write" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogInPageWrite" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">Users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">Authenticate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="return_module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">return_module</stringProp>
                  <stringProp name="Argument.value">Users</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="return_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">return_action</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cant_login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cant_login</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_module</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_action</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_record" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_record</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_token</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_oauth_token</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_mobile" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login_mobile</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="user_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">user_name</stringProp>
                  <stringProp name="Argument.value">username</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username_password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username_password</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Login</stringProp>
                  <stringProp name="Argument.value">Log In</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.18.0.76</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/demo/crm/index.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">6704</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
              <stringProp name="TestPlan.comments">Recorded:6704ms</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76/demo/crm/index.php?action=Login&amp;module=Users</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get Slots" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSlot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startDate</stringProp>
                  <stringProp name="Argument.value">2020-06-12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                  <stringProp name="Argument.value">00:00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locationId</stringProp>
                  <stringProp name="Argument.value">572DAA3E-7746-451D-8CCA-1F0DCB3CA0A3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="resourceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">resourceId</stringProp>
                  <stringProp name="Argument.value">FD5DA567-DB64-4FBE-8089-0209B5EF28A3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="eventID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eventID</stringProp>
                  <stringProp name="Argument.value">68E83F05-5D0B-4C2F-962B-104986547F6F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.18.0.76</stringProp>
            <stringProp name="HTTPSampler.port">8083</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/schedules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76/demo/crm/index.php?searchFormTab=basic_search&amp;module=sch_scheduleAppointment&amp;action=ListView&amp;query=true&amp;orderBy=&amp;sortOrder=&amp;specialty_basic%5B%5D=Internal+Med&amp;provider_location_basic%5B%5D=572DAA3E-7746-451D-8CCA-1F0DCB3CA0A3&amp;name_basic=&amp;appointmenttype_basic%5B%5D=&amp;button=Search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">180000</stringProp>
              <stringProp name="RandomTimer.range">30000</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Schedule Appointment" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScheduleAppointment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;suiteCrmPatientId&quot;:&quot;d5a30f9b-986f-0439-ff45-5ebaa47c43fb&quot;,&quot;id&quot;:0,&quot;medevantageId&quot;:&quot;&quot;,&quot;externalSystemId&quot;:&quot;&quot;,&quot;practitionerId&quot;:&quot;418&quot;,&quot;npi&quot;:&quot;1972043685&quot;,&quot;location&quot;:&quot;locationID&quot;,&quot;insurance&quot;:&quot;&quot;,&quot;applicationUserId&quot;:&quot;b751125a-c022-4a1f-8c1a-76ce15aedde3&quot;,&quot;resourceId&quot;:&quot;FD5DA567-DB64-4FBE-8089-0209B5EF28A3&quot;,&quot;rescheduleAppointmentId&quot;:&quot;0&quot;,&quot;encounterId&quot;:&quot;0&quot;,&quot;identifier&quot;:[{&quot;id&quot;:0,&quot;uses&quot;:&quot;&quot;,&quot;dataType&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;participant&quot;:[{&quot;id&quot;:&quot;A8C4F13F-BF22-466A-BEF6-47E7ECAAE380&quot;,&quot;type&quot;:&quot;PROVIDER&quot;,&quot;name&quot;:{&quot;fname&quot;:&quot;Ann&quot;,&quot;mname&quot;:&quot;&quot;,&quot;lname&quot;:&quot;Stewart ANP-BC&quot;,&quot;id&quot;:&quot;&quot;,&quot;uses&quot;:&quot;&quot;,&quot;text&quot;:{&quot;id&quot;:&quot;&quot;,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:&quot;&quot;},&quot;prefix&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;},&quot;race&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;orgName&quot;:&quot;&quot;,&quot;orgId&quot;:&quot;&quot;,&quot;telecom&quot;:[{&quot;id&quot;:&quot;&quot;,&quot;uses&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;ranks&quot;:&quot;&quot;,&quot;value&quot;:null}],&quot;gender&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;dob&quot;:null,&quot;required&quot;:false,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;isActive&quot;:false,&quot;photo&quot;:[{&quot;id&quot;:&quot;&quot;,&quot;contentType&quot;:&quot;&quot;,&quot;language&quot;:&quot;&quot;,&quot;data&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;hash&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;creation&quot;:&quot;&quot;,&quot;thumbnail&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;isDefault&quot;:true,&quot;isProfileImage&quot;:true}]},{&quot;id&quot;:null,&quot;type&quot;:&quot;PATIENT&quot;,&quot;name&quot;:{&quot;id&quot;:null,&quot;text&quot;:{&quot;id&quot;:0,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:false},&quot;uses&quot;:&quot;&quot;,&quot;fname&quot;:&quot;Michael K&quot;,&quot;lname&quot;:&quot; Branch&quot;,&quot;mname&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;},&quot;race&quot;:{&quot;id&quot;:1,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;orgName&quot;:&quot;&quot;,&quot;orgId&quot;:&quot;&quot;,&quot;telecom&quot;:[{&quot;id&quot;:0,&quot;type&quot;:&quot;EMAIL&quot;,&quot;uses&quot;:&quot;PERSONAL&quot;,&quot;ranks&quot;:&quot; &quot;,&quot;value&quot;:&quot;MichaelKBranch@mailinator.com&quot;},{&quot;id&quot;:1,&quot;type&quot;:&quot;CELL&quot;,&quot;uses&quot;:&quot;HOME&quot;,&quot;ranks&quot;:&quot; &quot;,&quot;value&quot;:&quot;6016600029&quot;},{&quot;id&quot;:2,&quot;type&quot;:&quot;PHONE&quot;,&quot;uses&quot;:&quot;OFFICE&quot;,&quot;ranks&quot;:&quot; &quot;,&quot;value&quot;:&quot;&quot;}],&quot;gender&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;Male&quot;,&quot;display&quot;:&quot;Male&quot;,&quot;type&quot;:&quot;&quot;},&quot;dob&quot;:&quot;19791122&quot;,&quot;required&quot;:false,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;isActive&quot;:false,&quot;photo&quot;:{&quot;id&quot;:0,&quot;contentType&quot;:&quot;&quot;,&quot;language&quot;:&quot;&quot;,&quot;data&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;size&quot;:0,&quot;hash&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;creation&quot;:null,&quot;thumbnail&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;isDefault&quot;:false,&quot;isProfileImage&quot;:false}}],&quot;providerLocation&quot;:{&quot;id&quot;:&quot;572DAA3E-7746-451D-8CCA-1F0DCB3CA0A3&quot;,&quot;uses&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;text&quot;:{&quot;id&quot;:&quot;&quot;,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:&quot;&quot;},&quot;city&quot;:{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;display&quot;:&quot;Rock Hill&quot;},&quot;locationName&quot;:&quot;Rock Hill&quot;,&quot;line1&quot;:[&quot;61 Emerald Place&quot;],&quot;state&quot;:{&quot;code&quot;:&quot;NY&quot;,&quot;display&quot;:&quot;NY&quot;,&quot;id&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;postalCode&quot;:{&quot;display&quot;:&quot;127756049&quot;,&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;127756049&quot;,&quot;type&quot;:&quot;&quot;},&quot;district&quot;:{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;period&quot;:{&quot;id&quot;:&quot;&quot;,&quot;startDate&quot;:&quot;&quot;,&quot;endDate&quot;:&quot;&quot;},&quot;geoLocation&quot;:{&quot;id&quot;:&quot;&quot;,&quot;latitude&quot;:&quot;&quot;,&quot;longitude&quot;:&quot;&quot;,&quot;altitude&quot;:&quot;&quot;,&quot;text&quot;:{&quot;id&quot;:&quot;&quot;,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:&quot;&quot;}},&quot;telecom&quot;:[{&quot;id&quot;:&quot;&quot;,&quot;uses&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;ranks&quot;:&quot;&quot;,&quot;value&quot;:&quot;8457946999&quot;}],&quot;distance&quot;:{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;isDefault&quot;:true},&quot;appointmentStatus&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;Pending&quot;,&quot;type&quot;:&quot;&quot;},&quot;serviceCategory&quot;:{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;serviceType&quot;:{&quot;id&quot;:&quot;68E83F05-5D0B-4C2F-962B-104986547F6F&quot;,&quot;code&quot;:&quot;Follow Up Appointment&quot;,&quot;display&quot;:&quot;Follow Up Appointment&quot;,&quot;type&quot;:&quot;FUP&quot;},&quot;speciality&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;Internal Med&quot;,&quot;type&quot;:&quot;&quot;},&quot;bookableFlag&quot;:false,&quot;appointmentType&quot;:{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;reasonReference&quot;:[{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;}],&quot;reasonCode&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;},&quot;priority&quot;:0,&quot;description&quot;:{&quot;id&quot;:0,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:false},&quot;supportingInformation&quot;:[{&quot;id&quot;:0,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:false}],&quot;slot&quot;:[{&quot;id&quot;:0,&quot;startTime&quot;:&quot;2020-06-12T8:00:00&quot;,&quot;startDate&quot;:&quot;2020-06-12&quot;,&quot;note&quot;:{&quot;id&quot;:0,&quot;text&quot;:&quot;string&quot;,&quot;isHtml&quot;:true},&quot;color&quot;:{&quot;id&quot;:0,&quot;code&quot;:&quot;string&quot;,&quot;display&quot;:&quot;string&quot;,&quot;type&quot;:&quot;string&quot;},&quot;duration&quot;:30,&quot;status&quot;:&quot;string&quot;,&quot;isAvailable&quot;:true,&quot;overBooked&quot;:true,&quot;isDoubleBook&quot;:true}],&quot;comment&quot;:{&quot;id&quot;:0,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:false},&quot;basedOn&quot;:[{&quot;id&quot;:0,&quot;code&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;}],&quot;requestedPeriod&quot;:{&quot;id&quot;:0,&quot;startDate&quot;:null,&quot;endDate&quot;:null},&quot;modifyBy&quot;:&quot;&quot;,&quot;checkInStatus&quot;:false,&quot;modifiedDate&quot;:&quot;&quot;,&quot;isActive&quot;:false,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;isDeleted&quot;:false,&quot;patientInstruction&quot;:{&quot;id&quot;:0,&quot;text&quot;:&quot;&quot;,&quot;isHtml&quot;:false},&quot;patientAge&quot;:40,&quot;patientGender&quot;:&quot;Male&quot;,&quot;appointmentSpecialty&quot;:&quot;Internal Med&quot;,&quot;primaryProvider&quot;:&quot;&quot;,&quot;patientStatus&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.18.0.76</stringProp>
            <stringProp name="HTTPSampler.port">8083</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/appointments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76/demo/crm/index.php?searchFormTab=basic_search&amp;module=sch_scheduleAppointment&amp;action=ListView&amp;query=true&amp;orderBy=&amp;sortOrder=&amp;specialty_basic%5B%5D=Internal+Med&amp;provider_location_basic%5B%5D=572DAA3E-7746-451D-8CCA-1F0DCB3CA0A3&amp;name_basic=&amp;appointmenttype_basic%5B%5D=&amp;button=Search</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://172.18.0.76</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
